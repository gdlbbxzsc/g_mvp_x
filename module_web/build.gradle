if (module_Debug.toBoolean()) {
    apply plugin: 'com.android.application'
} else {
    apply plugin: 'com.android.library'
}

android {
    compileSdkVersion build_versions.compileSdkVersion

    defaultConfig {

        if (module_Debug.toBoolean()) {
            applicationId app_versions.applicationId + project.getName()
            resConfigs res_configs.configs
        }

        minSdkVersion build_versions.minSdkVersion
        targetSdkVersion build_versions.targetSdkVersion
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles 'consumer-rules.pro'

        buildConfigField("boolean", "LOG", log_mode.debug)

        manifestPlaceholders = manifest_placeholders

        resConfigs res_configs.configs

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [AROUTER_MODULE_NAME: project.getName(), APPLOGIC: project.getName()]
            }
        }

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            buildConfigField("boolean", "LOG", log_mode.release)
        }
    }

    sourceSets {
        main {
            if (module_Debug.toBoolean()) {
                manifest.srcFile 'src/main/module_debug/AndroidManifest.xml'
            } else {
                //集成开发模式下排除debug文件夹中的所有Java文件
                java {
                    exclude 'module_debug/**'
                }
            }
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    dataBinding {
        enabled = true
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

    implementation project(path: ':lib_support')
    implementation project(path: ':lib_mvp')
    implementation project(path: ':global_application')

    annotationProcessor "com.alibaba:arouter-compiler:$dependencies_version.arouter_compiler_verion"

    implementation project(":applogic_annotation")
    implementation project(":applogic_api")
    annotationProcessor project(":applogic_compiler")

}
